{
  "pros": "Переваги",
  "cons": "Недоліки",
  "when_to_preffer_this_approach": "Коли віддавати перевагу цьому підходу",

  "locales": {
    "en": "Агнглійська",
    "ukr": "Українська"
  },

  "routes": {
    "home": "Головна",
    "me": "Я",
    "users": "Користувачі",
    "admin": "Адмін",
    "how_to_use": "Як користуватися",
    "login": "Увійти",
    "logout": "Вийти"
  },

  "main_view": {
    "introduction": {
      "description": "Веб-додаток для керування ролями авторизованих користувачів за допомогою Microsoft Graph (v1) або MongoDB (v2).",
      "details": "Додаток дозволяє переглядати список авторизованих користувачів, керувати їхніми ролями та видаляти користувачів. Він зосереджений на безпеці, масштабованості та чіткому розділенні контролю доступу."
    },

    "problem": {
      "title": "Проблема",
      "description": "Реалізація ролей користувачів в Azure AD B2C може бути дуже складним завданням, оскільки Azure AD B2C не надає вбудованого контролю доступу на основі ролей (RBAC), як в Azure AD. Це призводить до багатьох складнощів і неочевидних обхідних шляхів при спробі побудувати безпечну та підтримувану логіку контролю доступу."
    },

    "solution": {
      "title": "Рішення",
      "description": "Ця проблема вирішується шляхом поєднання API-конекторів Azure AD B2C, власного бекенду та налаштування custom claims. API-конектор зберігає метадані ролей користувачів або в зовнішній базі даних, або безпосередньо в Microsoft Graph, і збагачує токени під час процесу входу. Панель адміністратора взаємодіє з бекендом для керування ролями, тоді як Azure Functions обробляють логіку авторизації та ін'єкцію claims токенів — ефективно імітуючи гнучку систему PBAC поверх Azure AD B2C.",
      "details": "У репозиторії GitHub цього проекту ви можете дослідити два різні підходи до вирішення цієї проблеми: один з використанням власної бази даних, а інший — безпосередньо з Microsoft Graph. Жива версія цього сайту використовує реалізацію на основі Microsoft Graph."
    },

    "functionality_section": {
      "title": "Основний функціонал",
      "item1": "Переглядайте авторизованих користувачів, керуйте їхніми ролями або видаляйте користувачів з нижчими правами, використовуючи <strong>Microsoft Graph API</strong>.",
      "item2": "Опції призначення ролей включають: <strong class=\"text-gray-900\">Менеджер</strong>, <strong class=\"text-gray-900\">Модератор</strong>, <strong class=\"text-gray-900\">Адмін</strong>.",
      "item3": "<strong>Адміністратори</strong> можуть призначати ролі Менеджера та Модератора, а також видаляти користувачів з ролями нижчими за свої.",
      "item4": "<strong>Власники</strong> мають повний доступ до системи, включно з можливістю призначати або видаляти будь-які ролі, включно з адміністраторами.",
      "item5": "Веб-додаток включає захист маршрутів на основі ролей, отриманих із токена."
    },

    "technologies_used": {
      "title": "Використані технології"
    }
  },

  "me_view": {
    "loading": "Завантаження...",
    "idTokenClaimsTitle": "Вміст ID токену",
    "userIdTitle": "User id",
    "userIdMapped": "Взято з claim <code>sub</code>",
    "claimLabel": "Claim",
    "valueLabel": "Значення",
    "descriptionLabel": "Опис",
    "noDescription": "—"
  },

  "users_view": {
    "title": "Останні зареєстровані користувачі",
    "loadingMessage": "Завантаження...",
    "noUsersMessage": "Користувачів не знайдено.",
    "userDetailsTitle": "Дані користувача",
    "labels": {
      "id": "Id",
      "displayName": "Відображуване ім'я",
      "created": "Створено",
      "role": "Роль",
      "roleNotProvided": "Не вказано"
    }
  },

  "user_search": {
    "placeholder": "Введіть ID користувача",
    "searchButton": "Пошук",
    "noUserSelected": "Користувача не обрано"
  },

  "how_to_use": {
    "introduction": {
      "title": "Як користуватися",
      "step1": "Увійдіть у свій акаунт (або використайте демо-облікові дані).",
      "step2": "Перейдіть на сторінку «Я», щоб переглянути деталі профілю.",
      "step3": "Відвідайте сторінку «Користувачі» для перегляду та пошуку всіх користувачів.",
      "step4": "Якщо у вас відповідна роль, використовуйте сторінку «Адмін» для керування користувачами."
    },

    "sign_in": {
      "title": "1. Вхід",
      "description": "Натисніть кнопку «Увійти» у хедері та автентифікуйтеся за допомогою свого облікового запису Microsoft.",
      "admin_demo_credentials": "Демо-облікові дані адміністратора",
      "email_label": "Електронна пошта:",
      "password_label": "Пароль:"
    },

    "pages_overview": {
      "title": "2. Огляд сторінок",

      "page_1_title": "Я",
      "page_1_text": "Сторінка “Я” — це ваша особиста панель. Тут можна бачити всі розшифровані дані з вашого ID токена — ваш ID користувача, email, ролі, час автентифікації та інші атрибути. Використовуйте цей вигляд, щоб перевірити, чи працює логін і чи містить токен правильну інформацію.",

      "page_2_title": "Користувачі",
      "page_2_text": "На сторінці «Користувачі» відображено п’ять найновіших зареєстрованих користувачів, отриманих безпосередньо з Microsoft Graph. Кожен запис показує ім'я, ID користувача, призначену роль і час реєстрації. Це дає змогу бачити, хто приєднався до додатка і які має ролі.",

      "page_3_title": "Адмін",
      "page_3_text": "Сторінка «Адмін» доступна лише, якщо у вашому токені є claim extension_AzureAdminPageRole. Тут можна редагувати ролі користувачів, видаляти акаунти та тестувати адміністративні функції. Будьте обережні — видалення користувача тут призведе до його видалення в усьому орендарі."
    },

    "rbac_comparison": {
      "title": "3. Підходи до RBAC",
      "description": "Існує два основні підходи до реалізації контролю доступу на основі ролей (RBAC) у сучасних вебзастосунках. Нижче наведено порівняння інтеграції з Azure Entra (Microsoft Graph) та використання власної системи управління ролями на основі зовнішньої бази даних.",
      "approaches": [
        {
          "title": "1. Підхід через Microsoft Graph API",
          "description": "Ролі та інші claims керуються безпосередньо в Azure Active Directory Business to Consumer та можуть бути отримані або з ID-токена, або динамічно через Microsoft Graph API.",
          "pros": [
            "Немає потреби підтримувати окрему базу даних для зберігання ролей.",
            "Вбудована підтримка SSO: користувачі можуть безперешкодно отримувати доступ до кількох застосунків в одному тенанті з одним входом.",
            "Безпека через токен-автентифікацію: запити потребують дійсного access-токена, що підвищує контроль і відстежуваність.",
            "Централізоване управління ідентичністю та доступом в екосистемі Azure.",
            "Висока стабільність і масштабованість: Microsoft Graph API працює на надійній інфраструктурі Azure, здатній обробляти великі навантаження."
          ],
          "cons": [
            "Користувацькі claims потребують глобально унікальних назв — це може бути заплутаним у багатьох застосунках.",
            "Складність підтримки SSO: видалення користувача призводить до його видалення з усіх застосунків тенанту, що ускладнює управління життєвим циклом.",
            "Обмежена гнучкість: додаткові мапінги чи логіка вимагають складної конфігурації Entra або зовнішніх інструментів.",
            "Низька швидкодія: навіть прості запити Microsoft Graph API виконуються повільно, що негативно впливає на UX, особливо під час входу.",
            "Microsoft Graph для Azure AD B2C має обмежену підтримку фільтрації, сортування або пагінації даних користувачів."
          ],
          "whenToUse": [
            "Вашому застосунку потрібно лише кілька полів з даними про ідентичність (наприклад, роль).",
            "Ви хочете уникнути управління власною базою користувачів і повністю покладатись на Azure.",
            "Безпека та централізований контроль важливіші за швидкодію та гнучкість запитів."
          ]
        },
        {
          "title": "2. Підхід із зовнішньою базою даних (Рекомендовано)",
          "description": "Користувачі та ролі зберігаються у власній бекенд-базі даних — у нашому випадку MongoDB — та синхронізуються з Azure Active Directory Business to Consumer під час створення користувача. Цей підхід особливо рекомендується для продакшн-застосунків, де критичними є продуктивність і гнучкість.",
          "pros": [
            "Дуже швидко: ~40–70 мс проти 400–1500 мс у Graph API.",
            "Максимальна гнучкість: Повний контроль над запитами, фільтрацією, пагінацією або навіть GraphQL.",
            "Легке додавання кастомних claims: будь-які додаткові дані або правила можна підключити з бекенду.",
            "Підтримка складних сценаріїв: рольовий доступ, дозволи, мульти-тенантність тощо.",
            "Простіше тестування та підтримка: усе під вашим контролем."
          ],
          "cons": [
            "Потрібна додаткова логіка на бекенді: синхронізація користувачів при створенні.",
            "Нижчий рівень безпеки за замовчуванням: ви відповідаєте за захист ендпоінтів та запобігання витоку даних.",
            "Можливі перевантаження: на відміну від Graph API, продуктивність під великим навантаженням залежить від вашої інфраструктури."
          ],
          "whenToUse": [
            "Вам потрібна швидка, гнучка та масштабована система управління користувачами.",
            "Ви хочете відокремити логіку користувачів від провайдера ідентичності.",
            "Ваші користувачі мають багато додаткових полів або специфічних для застосунку даних.",
            "Ви хочете повний контроль над логікою ролей та дозволів."
          ]
        }
      ]
    },

    "important_note": {
      "title": "Примітка:",
      "text": "Будь ласка, <strong>не</strong> змінюйте або видаляйте попередньо створені акаунти. Видалення акаунту у Microsoft Graph видалить його з усіх додатків орендаря власника сайту. Ви можете змінювати або видаляти лише акаунти <strong>створені вами</strong>."
    }
  },

  "user_card": {
    "title": "Дані користувача",
    "labels": {
      "id": "Id",
      "displayName": "Відображуване ім'я",
      "jobTitle": "Посада",
      "department": "Відділ",
      "created": "Створено",
      "accountEnabled": "Обліковий запис активний",
      "syncedFromOnPrem": "Синхронізовано з On-Prem?",
      "preferredLanguage": "Мова за замовчуванням",
      "roles": "Ролі",
      "roleNotProvided": "Не вказано"
    },
    "rolesSectionTitle": "Ролі",

    "buttons": {
      "submit": "Підтвердити",
      "delete": "Видалити"
    },

    "not_provided": "Не вказано",

    "yes": "Так",
    "no": "Ні"
  },

  "notifications": {
    "noChanges": "Зміни не виявлено",
    "updateSuccess": "Успішно оновлено",
    "deleteSuccess": "Успішно видалено",
    "unexpectedError": "Несподівана помилка. Перевірте консоль."
  },

  "claim_explanations": {
    "sub": "Унікальний ідентифікатор користувача у додатку.",
    "name": "Повне ім’я користувача.",
    "given_name": "Ім’я користувача.",
    "family_name": "Прізвище користувача.",
    "displayName": "Відображуване ім’я користувача.",
    "email": "Основна електронна адреса користувача.",
    "emails": "Список електронних адрес користувача.",
    "role": "Призначені ролі користувача.",
    "oid": "Object ID — унікальний ідентифікатор користувача в Azure AD.",
    "sid": "Session ID — унікальний ідентифікатор сесії користувача.",
    "idp": "Провайдер ідентифікації, що використовувався для аутентифікації (наприклад, Google, Facebook, локальний акаунт).",
    "tfp": "Політика довіри (наприклад, B2C_1_signin) — визначає потік користувача.",
    "nonce": "Значення, що використовується для запобігання повторного використання токена.",
    "ver": "Версія токена (наприклад, 1.0 або 2.0).",
    "iat": "Час видачі — час, коли токен був виданий (UNIX timestamp).",
    "nbf": "Не дійсний до — токен недійсний до цього часу.",
    "exp": "Час закінчення терміну дії токена.",
    "auth_time": "Час, коли користувач був аутентифікований.",
    "azp": "Авторизована сторона — ID клієнта додатку, для якого видано токен.",
    "azpacr": "Метод аутентифікації (наприклад, pwd, mfa).",
    "iss": "Видавець — сервер авторизації, що видав токен.",
    "aud": "Аудиторія — призначені отримувачі токена.",
    "extension_AzureAdminPageRole": "Кастомний атрибут, що відображає ролі користувача."
  }
}
